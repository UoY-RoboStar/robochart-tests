untimed csp test5_spec1 csp-begin
	test5_spec1 = test5::CT::e.out.1 -> test5::CT::terminate -> SKIP
csp-end

untimed assertion t2c: test5::CT equals test5_spec1

timed csp test5_spec2 csp-begin
	test5_spec2 = let
		wait(n) = if (n > 0) then tock -> wait(n-1) else SKIP
		aux = test5::CT::e.out.1 -> test5::CT::terminate -> SKIP
		      []
		      tock -> aux
	within wait(6); aux
csp-end

timed assertion t2d: test5::CT equals test5_spec2


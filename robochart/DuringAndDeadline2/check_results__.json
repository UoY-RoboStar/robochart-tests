{ "project": "DuringAndDeadline/",
					"assertions": [
			 
{ "name": "file_file_comp.check.csp",
"results": { "copyright_notice": "FDR Version 4.2.7 copyright 2016 Oxford University Innovation Ltd. All Rights Reserved.","license_type": "Academic license for non-commercial use only","results": [{ "assertion_string": "let id__ = 0\nwithin\n    original::mod0::O__(id__) [[original::mod0::terminate <- mod0::terminate]] [[original::mod0::op1Call <- mod0::op1Call]]\n    [FD= let id__ = 0 within mod0::O__(id__)","errors": [],"is_negated": 0,"result": 1,"visited_states": 1,"visited_transitions": 1,"visited_plys": 1,"counterexamples": []},{ "assertion_string": "let id__ = 0 within mod0::O__(id__)\n    [FD= let id__ = 0\n         within\n             original::mod0::O__(id__) [[original::mod0::terminate <- mod0::terminate]] [[original::mod0::op1Call <- mod0::op1Call]]","errors": [],"is_negated": 0,"result": 1,"visited_states": 1,"visited_transitions": 1,"visited_plys": 1,"counterexamples": []},{ "assertion_string": "let id__ = 0\nwithin\n    original::ctrl0::O__(id__) [[original::ctrl0::ev1 <- ctrl0::ev1]] [[original::ctrl0::terminate <- ctrl0::terminate]] [[original::ctrl0::op1Call <- ctrl0::op1Call]]\n    [FD= let id__ = 0 within ctrl0::O__(id__)","errors": [],"is_negated": 0,"result": 1,"visited_states": 5,"visited_transitions": 6,"visited_plys": 4,"counterexamples": []},{ "assertion_string": "let id__ = 0 within ctrl0::O__(id__)\n    [FD= let id__ = 0\n         within\n             original::ctrl0::O__(id__) [[original::ctrl0::ev1 <- ctrl0::ev1]] [[original::ctrl0::terminate <- ctrl0::terminate]] [[original::ctrl0::op1Call <- ctrl0::op1Call]]","errors": [],"is_negated": 0,"result": 1,"visited_states": 5,"visited_transitions": 6,"visited_plys": 4,"counterexamples": []},{ "assertion_string": "let id__ = 0\nwithin\n    original::ctrl1::O__(id__) [[original::ctrl1::ev1 <- ctrl1::ev1]] [[original::ctrl1::terminate <- ctrl1::terminate]] [[original::ctrl1::op1Call <- ctrl1::op1Call]]\n    [FD= let id__ = 0 within ctrl1::O__(id__)","errors": [],"is_negated": 0,"result": 1,"visited_states": 1,"visited_transitions": 1,"visited_plys": 1,"counterexamples": []},{ "assertion_string": "let id__ = 0 within ctrl1::O__(id__)\n    [FD= let id__ = 0\n         within\n             original::ctrl1::O__(id__) [[original::ctrl1::ev1 <- ctrl1::ev1]] [[original::ctrl1::terminate <- ctrl1::terminate]] [[original::ctrl1::op1Call <- ctrl1::op1Call]]","errors": [],"is_negated": 0,"result": 1,"visited_states": 1,"visited_transitions": 1,"visited_plys": 1,"counterexamples": []},{ "assertion_string": "let id__ = 0\nwithin\n    original::stm0::O__(id__) [[original::stm0::ev1 <- stm0::ev1]] [[original::stm0::terminate <- stm0::terminate]] [[original::stm0::op1Call <- stm0::op1Call]]\n    [FD= let id__ = 0 within stm0::O__(id__)","errors": [],"is_negated": 0,"result": 1,"visited_states": 5,"visited_transitions": 6,"visited_plys": 4,"counterexamples": []},{ "assertion_string": "let id__ = 0 within stm0::O__(id__)\n    [FD= let id__ = 0\n         within\n             original::stm0::O__(id__) [[original::stm0::ev1 <- stm0::ev1]] [[original::stm0::terminate <- stm0::terminate]] [[original::stm0::op1Call <- stm0::op1Call]]","errors": [],"is_negated": 0,"result": 1,"visited_states": 5,"visited_transitions": 6,"visited_plys": 4,"counterexamples": []},{ "assertion_string": "let id__ = 0\nwithin\n    original::stm1::O__(id__) [[original::stm1::ev1 <- stm1::ev1]] [[original::stm1::terminate <- stm1::terminate]] [[original::stm1::op_DACall <- stm1::op_DACall]] [[original::stm1::op1Call <- stm1::op1Call]] [[original::stm1::TSTOPCall <- stm1::TSTOPCall]]\n    [FD= let id__ = 0 within stm1::O__(id__)","errors": [],"is_negated": 0,"result": 1,"visited_states": 5,"visited_transitions": 6,"visited_plys": 4,"counterexamples": []},{ "assertion_string": "let id__ = 0 within stm1::O__(id__)\n    [FD= let id__ = 0\n         within\n             original::stm1::O__(id__) [[original::stm1::ev1 <- stm1::ev1]] [[original::stm1::terminate <- stm1::terminate]] [[original::stm1::op_DACall <- stm1::op_DACall]] [[original::stm1::op1Call <- stm1::op1Call]] [[original::stm1::TSTOPCall <- stm1::TSTOPCall]]","errors": [],"is_negated": 0,"result": 1,"visited_states": 5,"visited_transitions": 6,"visited_plys": 4,"counterexamples": []},{ "assertion_string": "let id__ = 0\nwithin\n    original::ctrl0::stm_ref0::O__(id__) [[original::ctrl0::stm_ref0::ev1 <- ctrl0::stm_ref0::ev1]] [[original::ctrl0::stm_ref0::terminate <- ctrl0::stm_ref0::terminate]] [[original::ctrl0::stm_ref0::op1Call <- ctrl0::stm_ref0::op1Call]] [[original::ctrl0::op1Call <- ctrl0::op1Call]]\n    [FD= let id__ = 0 within ctrl0::stm_ref0::O__(id__)","errors": [],"is_negated": 0,"result": 1,"visited_states": 5,"visited_transitions": 6,"visited_plys": 4,"counterexamples": []},{ "assertion_string": "let id__ = 0 within ctrl0::stm_ref0::O__(id__)\n    [FD= let id__ = 0\n         within\n             original::ctrl0::stm_ref0::O__(id__) [[original::ctrl0::stm_ref0::ev1 <- ctrl0::stm_ref0::ev1]] [[original::ctrl0::stm_ref0::terminate <- ctrl0::stm_ref0::terminate]] [[original::ctrl0::stm_ref0::op1Call <- ctrl0::stm_ref0::op1Call]] [[original::ctrl0::op1Call <- ctrl0::op1Call]]","errors": [],"is_negated": 0,"result": 1,"visited_states": 5,"visited_transitions": 6,"visited_plys": 4,"counterexamples": []},{ "assertion_string": "let id__ = 0\nwithin\n    original::ctrl1::stm_ref0::O__(id__) [[original::ctrl1::stm_ref0::ev1 <- ctrl1::stm_ref0::ev1]] [[original::ctrl1::stm_ref0::terminate <- ctrl1::stm_ref0::terminate]] [[original::ctrl1::stm_ref0::op1Call <- ctrl1::stm_ref0::op1Call]] [[original::ctrl1::op1Call <- ctrl1::op1Call]]\n    [FD= let id__ = 0 within ctrl1::stm_ref0::O__(id__)","errors": [],"is_negated": 0,"result": 1,"visited_states": 1,"visited_transitions": 1,"visited_plys": 1,"counterexamples": []},{ "assertion_string": "let id__ = 0 within ctrl1::stm_ref0::O__(id__)\n    [FD= let id__ = 0\n         within\n             original::ctrl1::stm_ref0::O__(id__) [[original::ctrl1::stm_ref0::ev1 <- ctrl1::stm_ref0::ev1]] [[original::ctrl1::stm_ref0::terminate <- ctrl1::stm_ref0::terminate]] [[original::ctrl1::stm_ref0::op1Call <- ctrl1::stm_ref0::op1Call]] [[original::ctrl1::op1Call <- ctrl1::op1Call]]","errors": [],"is_negated": 0,"result": 1,"visited_states": 1,"visited_transitions": 1,"visited_plys": 1,"counterexamples": []}],"print_statement_results": [],"file_name": "file_file_comp.check.csp","event_map": {},"warnings": [],"errors": []} }
,{ "name": "timed/file_file_comp.check.csp",
"results": { "copyright_notice": "FDR Version 4.2.7 copyright 2016 Oxford University Innovation Ltd. All Rights Reserved.","license_type": "Academic license for non-commercial use only","results": [{ "assertion_string": "let id__ = 0\nwithin\n    original::mod0::O__(id__) [[original::mod0::terminate <- mod0::terminate]] [[original::mod0::op1Call <- mod0::op1Call]]\n    [FD= let id__ = 0 within mod0::O__(id__)","errors": [],"is_negated": 0,"result": 1,"visited_states": 6,"visited_transitions": 6,"visited_plys": 6,"counterexamples": []},{ "assertion_string": "let id__ = 0 within mod0::O__(id__)\n    [FD= let id__ = 0\n         within\n             original::mod0::O__(id__) [[original::mod0::terminate <- mod0::terminate]] [[original::mod0::op1Call <- mod0::op1Call]]","errors": [],"is_negated": 0,"result": 1,"visited_states": 11,"visited_transitions": 13,"visited_plys": 9,"counterexamples": []},{ "assertion_string": "let id__ = 0\nwithin\n    original::ctrl0::O__(id__) [[original::ctrl0::ev1 <- ctrl0::ev1]] [[original::ctrl0::terminate <- ctrl0::terminate]] [[original::ctrl0::op1Call <- ctrl0::op1Call]]\n    [FD= let id__ = 0 within ctrl0::O__(id__)","errors": [],"is_negated": 0,"result": 1,"visited_states": 8,"visited_transitions": 9,"visited_plys": 7,"counterexamples": []},{ "assertion_string": "let id__ = 0 within ctrl0::O__(id__)\n    [FD= let id__ = 0\n         within\n             original::ctrl0::O__(id__) [[original::ctrl0::ev1 <- ctrl0::ev1]] [[original::ctrl0::terminate <- ctrl0::terminate]] [[original::ctrl0::op1Call <- ctrl0::op1Call]]","errors": [],"is_negated": 0,"result": 1,"visited_states": 8,"visited_transitions": 9,"visited_plys": 7,"counterexamples": []},{ "assertion_string": "let id__ = 0\nwithin\n    original::ctrl1::O__(id__) [[original::ctrl1::ev1 <- ctrl1::ev1]] [[original::ctrl1::terminate <- ctrl1::terminate]] [[original::ctrl1::op1Call <- ctrl1::op1Call]]\n    [FD= let id__ = 0 within ctrl1::O__(id__)","errors": [],"is_negated": 0,"result": 1,"visited_states": 8,"visited_transitions": 9,"visited_plys": 7,"counterexamples": []},{ "assertion_string": "let id__ = 0 within ctrl1::O__(id__)\n    [FD= let id__ = 0\n         within\n             original::ctrl1::O__(id__) [[original::ctrl1::ev1 <- ctrl1::ev1]] [[original::ctrl1::terminate <- ctrl1::terminate]] [[original::ctrl1::op1Call <- ctrl1::op1Call]]","errors": [],"is_negated": 0,"result": 1,"visited_states": 8,"visited_transitions": 9,"visited_plys": 7,"counterexamples": []},{ "assertion_string": "let id__ = 0\nwithin\n    original::stm0::O__(id__) [[original::stm0::ev1 <- stm0::ev1]] [[original::stm0::terminate <- stm0::terminate]] [[original::stm0::op1Call <- stm0::op1Call]]\n    [FD= let id__ = 0 within stm0::O__(id__)","errors": [],"is_negated": 0,"result": 1,"visited_states": 8,"visited_transitions": 9,"visited_plys": 7,"counterexamples": []},{ "assertion_string": "let id__ = 0 within stm0::O__(id__)\n    [FD= let id__ = 0\n         within\n             original::stm0::O__(id__) [[original::stm0::ev1 <- stm0::ev1]] [[original::stm0::terminate <- stm0::terminate]] [[original::stm0::op1Call <- stm0::op1Call]]","errors": [],"is_negated": 0,"result": 1,"visited_states": 27,"visited_transitions": 34,"visited_plys": 20,"counterexamples": []},{ "assertion_string": "let id__ = 0\nwithin\n    original::stm1::O__(id__) [[original::stm1::ev1 <- stm1::ev1]] [[original::stm1::terminate <- stm1::terminate]] [[original::stm1::op_DACall <- stm1::op_DACall]] [[original::stm1::op1Call <- stm1::op1Call]] [[original::stm1::TSTOPCall <- stm1::TSTOPCall]]\n    [FD= let id__ = 0 within stm1::O__(id__)","errors": [],"is_negated": 0,"result": 1,"visited_states": 8,"visited_transitions": 9,"visited_plys": 7,"counterexamples": []},{ "assertion_string": "let id__ = 0 within stm1::O__(id__)\n    [FD= let id__ = 0\n         within\n             original::stm1::O__(id__) [[original::stm1::ev1 <- stm1::ev1]] [[original::stm1::terminate <- stm1::terminate]] [[original::stm1::op_DACall <- stm1::op_DACall]] [[original::stm1::op1Call <- stm1::op1Call]] [[original::stm1::TSTOPCall <- stm1::TSTOPCall]]","errors": [],"is_negated": 0,"result": 1,"visited_states": 25,"visited_transitions": 31,"visited_plys": 19,"counterexamples": []},{ "assertion_string": "let id__ = 0\nwithin\n    original::ctrl0::stm_ref0::O__(id__) [[original::ctrl0::stm_ref0::ev1 <- ctrl0::stm_ref0::ev1]] [[original::ctrl0::stm_ref0::terminate <- ctrl0::stm_ref0::terminate]] [[original::ctrl0::stm_ref0::op1Call <- ctrl0::stm_ref0::op1Call]] [[original::ctrl0::op1Call <- ctrl0::op1Call]]\n    [FD= let id__ = 0 within ctrl0::stm_ref0::O__(id__)","errors": [],"is_negated": 0,"result": 1,"visited_states": 8,"visited_transitions": 9,"visited_plys": 7,"counterexamples": []},{ "assertion_string": "let id__ = 0 within ctrl0::stm_ref0::O__(id__)\n    [FD= let id__ = 0\n         within\n             original::ctrl0::stm_ref0::O__(id__) [[original::ctrl0::stm_ref0::ev1 <- ctrl0::stm_ref0::ev1]] [[original::ctrl0::stm_ref0::terminate <- ctrl0::stm_ref0::terminate]] [[original::ctrl0::stm_ref0::op1Call <- ctrl0::stm_ref0::op1Call]] [[original::ctrl0::op1Call <- ctrl0::op1Call]]","errors": [],"is_negated": 0,"result": 1,"visited_states": 27,"visited_transitions": 34,"visited_plys": 20,"counterexamples": []},{ "assertion_string": "let id__ = 0\nwithin\n    original::ctrl1::stm_ref0::O__(id__) [[original::ctrl1::stm_ref0::ev1 <- ctrl1::stm_ref0::ev1]] [[original::ctrl1::stm_ref0::terminate <- ctrl1::stm_ref0::terminate]] [[original::ctrl1::stm_ref0::op1Call <- ctrl1::stm_ref0::op1Call]] [[original::ctrl1::op1Call <- ctrl1::op1Call]]\n    [FD= let id__ = 0 within ctrl1::stm_ref0::O__(id__)","errors": [],"is_negated": 0,"result": 1,"visited_states": 8,"visited_transitions": 9,"visited_plys": 7,"counterexamples": []},{ "assertion_string": "let id__ = 0 within ctrl1::stm_ref0::O__(id__)\n    [FD= let id__ = 0\n         within\n             original::ctrl1::stm_ref0::O__(id__) [[original::ctrl1::stm_ref0::ev1 <- ctrl1::stm_ref0::ev1]] [[original::ctrl1::stm_ref0::terminate <- ctrl1::stm_ref0::terminate]] [[original::ctrl1::stm_ref0::op1Call <- ctrl1::stm_ref0::op1Call]] [[original::ctrl1::op1Call <- ctrl1::op1Call]]","errors": [],"is_negated": 0,"result": 1,"visited_states": 27,"visited_transitions": 34,"visited_plys": 20,"counterexamples": []}],"print_statement_results": [],"file_name": "timed\/file_file_comp.check.csp","event_map": {},"warnings": [],"errors": []} }
]}

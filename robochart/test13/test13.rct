package test13
diagram test13

robotic platform RP {
	uses IEvents
}

interface IEvents {
	event In:nat
	event Out:nat
}

// A 'buffer' operation of sorts.
operation Output(i:nat) {

	uses IEvents
	initial I
	final F
  
	transition T0 { from I to F action Out!i <{0} }
}

operation IncrementI() {

	requires ISharedVar
	
	initial I
	final F
	
	transition T0 { from I to F action i=i+1 }
	
}

interface ISharedVar {
	var i:nat
}

interface SimOps {
	Output(i:nat)
	IncrementI()
}

module M {
	
	rref RP=RP
	cref C1=CT
	
	connection RP on In to C1 on In ( _async )
	connection C1 on Out to RP on Out ( _async )
}

controller CT {
	
	event In:nat
	event Out:nat
	
	opref outputOp=Output
	opref incrementI=IncrementI
		
	sref STM=STM
	
	connection CT on In to STM on In
	connection STM on Out to CT on Out
}

// A state machine with inputs and outputs
stm STM {
	
		// TODO: Revise use of cycleDef with 'cycle' and without.
		var i:nat
	 
		requires SimOps
	
		// Input and Output contexts are mandatory, even if empty.
		uses IEvents
	
		initial I
		state S0 { }
		state S1 { entry IncrementI() ; Output(i) }
	
		transition T0 { from I to S0 }
		transition T2 { from S0 to S1 trigger In?i } // No Type checking at the moment for usage of SimRefExp.
		transition T3 { from S1 to S0 }
	
	}
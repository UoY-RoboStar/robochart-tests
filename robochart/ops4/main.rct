diagram main 


























interface IOpA {
	opA ( d : nat )
}

operation opA ( d : nat
) {
	requires IOpB var e : nat = 2
	initial i0
	final f0
	transition t0 {
		from i0
		to f0
		action opB ( d )
	}
clock C
}

operation opB ( d : nat
) {
	requires IVars requires IRop initial i0
	final f0
	transition t0 {
		from i0
		to f0
		action opC ( e + d )
	}
}

operation opD ( d : nat
) {
}

interface IOpB {
	opB ( d : nat )
}

interface IVars {
	var e : nat
clock C
}

interface IEvents {
	event input : nat
}

interface IRop {
	opC ( d : nat )
}

robotic platform RP {
	uses IEvents provides IRop }

controller ctrl0 {
	uses IEvents requires IRop opref op_ref0 = opA
	opref op_ref1 = opB
	opref op_ref2 = opD
	sref stm_ref0 = stm0
connection ctrl0 on input to stm_ref0 on input
}

stm stm0 {
	uses IEvents requires IOpA var r : nat
	initial i0
	final f0
	state s0 {
	}
	transition t0 {
		from s0
		to f0
		trigger input ? r
		action opA ( r )
	}
	transition t1 {
		from i0
		to s0
	}
}

module mod0 {
	connection rp_ref0 on input to ctrl_ref0 on input ( _async )
	rref rp_ref0 = RP
	cref ctrl_ref0 = ctrl0
}

